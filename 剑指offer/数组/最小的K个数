class Solution {
public:
    vector<int> GetLeastNumbers_Solution(vector<int> input, int k) {
         
        if(input.size() == 0 || input.size() < k || k < 0)
        {
            return {};
        }
        int low = 0;
        int high = input.size()-1;
        int pos = partion(input,low,high);
        if(pos != k-1)
        {
            if(pos > k-1)
            {
                high = pos -1;
                pos = partion(input,low,high);
            }
            else
            {
                low = pos +1;
                pos = partion(input,low,high);
            }
        }
        vector<int>res(input.begin(),input.begin()+k);
        return res;
    }
    int partion(vector<int>& input,int low,int high)
    {
        int tmp = input[low];
        while(low < high)
        {
            while(low < high && input[high] > tmp)
            {
                high--;
            }
            input[low] = input[high];
            while(low < high && input[low] <= tmp)
            {
                low++;
            }
            input[high] = input[low];
        }
        input[low] = tmp;
        return low;
    }
};
